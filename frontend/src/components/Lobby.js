import React, { useState, useEffect } from 'react';
import { Users, Plus, Crown, Gamepad2, User, Wifi, Clock } from 'lucide-react';
import '../styles/Lobby.css';

const Lobby = ({ socket, myId }) => {
    const [name, setName] = useState('');
    const [roomName, setRoomName] = useState('');
    const [rooms, setRooms] = useState({});
    const [isConnected, setIsConnected] = useState(true);
    const [gameTime, setGameTime] = useState(600); // M·∫∑c ƒë·ªãnh 10 ph√∫t (600 gi√¢y)

    useEffect(() => {
        socket.on('roomListUpdate', (updatedRooms) => {
            setRooms(updatedRooms);
        });

        socket.on('connect', () => setIsConnected(true));
        socket.on('disconnect', () => setIsConnected(false));

        setName(`Ng∆∞·ªùi ch∆°i #${Math.floor(Math.random() * 100)}`);

        return () => {
            socket.off('roomListUpdate');
            socket.off('connect');
            socket.off('disconnect');
        };
    }, [socket]);

    const handleSetName = () => {
        socket.emit('setName', name);
        const notification = document.createElement('div');
        notification.className = 'name-notification';
        notification.innerHTML = `‚ú® T√™n c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c ƒë·∫∑t l√†: <strong>${name}</strong>`;
        document.body.appendChild(notification);
        setTimeout(() => notification.remove(), 3000);
    };

    const handleCreateRoom = () => {
        socket.emit('createRoom', { roomName, gameTime, myId });
        setRoomName('');
    };

    const handleJoinRoom = (roomId) => {
        socket.emit('setName', name);
        socket.emit('joinRoom', roomId);
    };

    return (
        <div className="lobby-container">
            <div className="lobby-content">
                <div className="lobby-header">
                    <div className="game-logo">
                        <h1 className="game-title">K·ª≥ S·ª≠ L·∫°c H·ªìng</h1>
                        <p className="game-subtitle">Boardgame l·ªãch s·ª≠ Vi·ªát Nam</p>
                        <div className={`connection-status ${isConnected ? 'connected' : 'disconnected'}`}>
                            <Wifi size={16} />
                            {isConnected ? 'ƒê√£ k·∫øt n·ªëi' : 'M·∫•t k·∫øt n·ªëi'}
                        </div>
                    </div>
                </div>

                <div className="lobby-main">
                    <div className="player-setup-card">
                        <div className="setup-section player-section">
                            <h3 className="setup-title">
                                <User size={24} />
                                Thi·∫øt l·∫≠p
                            </h3>
                            <div className="input-group">
                                <input
                                    type="text"
                                    value={name}
                                    name="playerName"
                                    onChange={(e) => setName(e.target.value)}
                                    placeholder="Nh·∫≠p t√™n c·ªßa b·∫°n"
                                    className="input-field"
                                />
                                <button onClick={handleSetName} className="action-button primary">
                                    <Crown size={20} />
                                    ƒê·∫∑t T√™n
                                </button>
                            </div>
                        </div>

                        <div className="setup-section room-section">
                            <h3 className="setup-title">
                                <Plus size={24} />
                                T·∫°o ph√≤ng m·ªõi
                            </h3>
                            <div className="input-group">
                                <input
                                    type="text"
                                    value={roomName}
                                    name="roomName"
                                    onChange={(e) => setRoomName(e.target.value)}
                                    placeholder="T√™n ph√≤ng (b·ªè tr·ªëng ƒë·ªÉ t·ª± ƒë·ªông)"
                                    className="input-field"
                                />
                                <button onClick={handleCreateRoom} className="action-button create-room">
                                    <Plus size={20} />
                                    T·∫°o Ph√≤ng
                                </button>
                            </div>
                            <div className="time-select-group">
                                <label className="time-label">
                                    <Clock size={20} />
                                    Th·ªùi gian ch∆°i:
                                </label>
                                <select 
                                    value={gameTime} 
                                    onChange={(e) => setGameTime(Number(e.target.value))}
                                    className="time-select"
                                    name="gameTime"
                                >
                                    <option value={300}>5 ph√∫t</option>
                                    <option value={600}>10 ph√∫t</option>
                                    <option value={900}>15 ph√∫t</option>
                                    <option value={1200}>20 ph√∫t</option>
                                    <option value={1800}>30 ph√∫t</option>
                                    <option value={2400}>40 ph√∫t</option>
                                    <option value={3600}>60 ph√∫t</option>
                                </select>
                            </div>
                        </div>
                    </div>

                    <div className="rooms-section">
                        <div className="rooms-header">
                            <h2 className="rooms-title">
                                <Gamepad2 size={24} />
                                Danh s√°ch ph√≤ng
                            </h2>
                            <span className="rooms-count">{Object.keys(rooms).length} ph√≤ng</span>
                        </div>

                        <div className="room-list">
                            {Object.keys(rooms).length > 0 ? (
                                Object.values(rooms).map(room => (
                                    <div key={room.id}>
                                        <div className="room-card">
                                            <div className="room-info">
                                                <div className="room-name">
                                                    <Crown size={20} />
                                                    {room.name}
                                                </div>
                                                <div className="room-id">ID: {room.id}</div>
                                            </div>
                                            <div className="room-details">
                                                <div className={`players-count ${room.playerCount >= 4 ? 'full' : ''}`}>
                                                    <Users size={16} />
                                                    {room.playerCount}/6
                                                </div>
                                                <button
                                                    onClick={() => handleJoinRoom(room.id)}
                                                    disabled={room.playerCount >= 4}
                                                    className="join-button"
                                                >
                                                    {room.playerCount >= 6 ? 'üö´ ƒê·∫ßy' : 'üéÆ V√†o Ph√≤ng'}
                                                </button>
                                            </div>
                                        </div>
                                        <div className="start-game-section">
                                            <button 
                                                className="start-game-button"
                                                onClick={() => socket.emit('startGame')}
                                                disabled={room?.players.length < 2 && room.hostId !== myId}
                                            >
                                                B·∫Øt ƒë·∫ßu tr·∫≠n ƒë·∫•u
                                            </button>
                                            {room?.players.length < 2 && (
                                                <p className="warning-text">C·∫ßn √≠t nh·∫•t 2 ng∆∞·ªùi ch∆°i ƒë·ªÉ b·∫Øt ƒë·∫ßu</p>
                                            )}
                                        </div>
                                    </div>
                                ))
                            ) : (
                                <div className="empty-rooms">
                                    <div className="empty-icon">üé≤</div>
                                    <h3>Ch∆∞a c√≥ ph√≤ng n√†o</h3>
                                    <p>H√£y t·∫°o ph√≤ng m·ªõi ƒë·ªÉ b·∫Øt ƒë·∫ßu!</p>
                                </div>
                            )}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    );
};

export default Lobby;