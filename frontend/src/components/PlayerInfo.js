import React from 'react';
import '../styles/PlayerInfo.css'; // File CSS ri√™ng cho component n√†y

// H√†m ƒë·ªÉ l·∫•y m√†u s·∫Øc t∆∞∆°ng ·ª©ng v·ªõi ng∆∞·ªùi ch∆°i
const getPlayerColor = (characterName) => {
    const colors = {
        'L·∫°c Long Qu√¢n': '#4a90e2',
        '√Çu C∆°': '#f5a623',
        'Th√°nh Gi√≥ng': '#50e3c2',
        'S∆°n Tinh': '#bd10e0',
    };
    return colors[characterName] || '#777';
};

function PlayerInfo({ player, isMyTurn, isMe }) {
    // X√°c ƒë·ªãnh c√°c l·ªõp CSS ƒë·ªông
    const playerInfoClasses = [
        'player-info',
        isMyTurn ? 'active-turn' : '',
        isMe ? 'my-info' : ''
    ].join(' ');

    const playerColor = getPlayerColor(player.character?.name);

    return (
        <div className={playerInfoClasses} style={{ '--player-color': playerColor }}>
            <div className="player-header">
                <img 
                    src={player.character?.avatar || '/path/to/default/avatar.png'} 
                    alt={player.character?.name} 
                    className="player-avatar"
                />
                <div className="player-details">
                    <h3 className="player-name">{player.name}</h3>
                    <p className="player-character">{player.character?.name || 'Ch∆∞a ch·ªçn nh√¢n v·∫≠t'}</p>
                </div>
            </div>
            
            <div className="player-stats">
                <div className="stat-item money">
                    <span className="stat-icon">üí∞</span>
                    <span>{player.money.toLocaleString('vi-VN')}</span>
                </div>
                {player.inJail && (
                    <div className="stat-item status-jail">
                        <span className="stat-icon">‚õìÔ∏è</span>
                        <span>ƒêang b·ªã giam (c√≤n {player.jailTurns} l∆∞·ª£t)</span>
                    </div>
                )}
            </div>

            <div className="player-properties">
                <h4>T√†i s·∫£n</h4>
                {player.properties && player.properties.length > 0 ? (
                    <div className="property-list">
                        {player.properties.map(propId => (
                            <div key={propId} className="property-dot" title={`M·∫£nh ƒë·∫•t ${propId}`}></div>
                        ))}
                    </div>
                ) : (
                    <p className="no-properties">Ch∆∞a c√≥ t√†i s·∫£n</p>
                )}
            </div>
        </div>
    );
}

export default PlayerInfo;